#include <bits/stdc++.h>
#include <numeric>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

const std::string YES = "Yes";
const std::string NO = "No";
auto solve(int N, int64_t K, std::vector<int64_t> &A) {
  if (reduce(ALL(A)) < K) {
    int64_t sum = 0;
    if (sum >= K) {
      cout << NO << endl;
      return;
    }
    sort(ALL(A));
    for (int i = 0; i < N; i++) {
      sum += A[i];
      if (sum >= K) {
        cout << NO << endl;
        return;
      }
    }
  } else {
    sort(A.rbegin(), A.rend());
  }
  cout << YES << endl;
  for (int i = 0; i < N; i++) {
    cout << A[i] << " ";
  }
  cout << endl;
}

// generated by oj-template v4.8.1
// (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int N;
  int64_t K;
  std::cin >> N;
  std::vector<int64_t> A(N);
  std::cin >> K;
  REP(i, N) { std::cin >> A[i]; }
  solve(N, K, A);
  return 0;
}
