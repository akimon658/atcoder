#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

const std::string YES = "Yes";
const std::string NO = "No";
bool solve(int N, int M, const std::vector<int64_t> &A,
           const std::vector<std::vector<int64_t>> &X) {
  vector<int64_t> got = X[0];
  for (int i = 1; i < N; i++) {
    for (int j = 0; j < M; j++) {
      got[j] += X[i][j];
    }
  }
  for (int i = 0; i < M; i++) {
    if (got[i] < A[i]) {
      return false;
    }
  }
  return true;
}

// generated by oj-template v4.8.1
// (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int N, M;
  std::cin >> N >> M;
  std::vector<int64_t> A(M);
  std::vector<std::vector<int64_t>> X(N, std::vector<int64_t>((M)));
  REP(i, M) { std::cin >> A[i]; }
  REP(j, N) {
    REP(i, M) { std::cin >> X[j][i]; }
  }
  auto ans = solve(N, M, A, X);
  std::cout << (ans ? YES : NO) << '\n';
  return 0;
}
